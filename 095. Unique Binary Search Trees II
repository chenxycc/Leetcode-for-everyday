# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def generateTrees(self, n):
        """
        :type n: int
        :rtype: List[TreeNode]
        """
        if n == 0:
            return []
        return self.dfs(1, n)
    def dfs(self, b, e):
        if b > e:
            return [None]
        res = []
        for rootval in range(b, e+1):
            lefttree = self.dfs(b, rootval-1)
            righttree = self.dfs(rootval+1, e)
            for i in lefttree:
                for j in righttree:
                    root = TreeNode(rootval)
                    root.left = i
                    root.right = j
                    res.append(root)
        return res
